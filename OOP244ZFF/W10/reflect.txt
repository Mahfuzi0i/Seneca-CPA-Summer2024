/*
--------------------------------------------------------------------
Name           : Abdullah Al Mahfuz
Email          : aamahfuz@myseneca.ca
Student ID     : 180377236
Section        : ZFF
Date           : 23 July 2024 (Tuesday)

Authenticity Declaration:
I have done all the coding by myself and only copied the code that
my professor provided to complete my workshops and assignments.
--------------------------------------------------------------------
*/

While completing this workshop, I have enhanced my understanding of dynamic memory management in C++. I have learned how to properly allocate and deallocate memory to avoid memory leaks and ensure efficient use of resources. Implementing the rule of three has been a crucial part of this process, as it involves writing a copy constructor, a copy assignment operator, and a destructor to handle deep copying of objects that contain dynamically allocated memory. Additionally, I have gained practical experience in reading file content into dynamically allocated memory, handling potential errors gracefully, and writing content to output streams. Working with inheritance and virtual functions has also enhanced my understanding of polymorphism in C++, particularly in the context of creating a derived class (HtmlText) that extends the functionality of a base class (Text). One of the challenging concepts was ensuring the proper implementation of the rule of three. Initially, I found it tricky to manage the deep copying of dynamic memory and ensuring that each object maintains its own copy of the data. To overcome this, I carefully reviewed the course notes and sought additional resources to understand the nuances of copy constructors, copy assignment operators, and destructors. I also encountered difficulties in reading the file content into memory, especially dealing with edge cases such as empty files or non-existent files. To address this, I implemented robust error checking and ensured that the class would be set to an empty state if any issues arose during file operations. Writing the HtmlText class to convert text content into HTML format was another challenge, particularly in handling special characters and multiple spaces correctly. I tackled this by breaking down the problem into smaller steps, testing each part thoroughly to ensure correct behavior. Completing this workshop has significantly improved my coding skills by reinforcing the importance of writing clean, maintainable, and efficient code. Implementing the rule of three has made me more conscious of resource management and the potential pitfalls of dynamic memory allocation. I have also become more proficient in file I/O operations, which is a valuable skill for many real-world applications. Additionally, working on the HtmlText class has enhanced my ability to manipulate strings and format output, which are essential skills in both software development and web development. Overall, this workshop has strengthened my problem-solving abilities and my capacity to implement complex features using fundamental C++ concepts. Apart from some concepts- everything in this workshop was very straight forward. I had no issues doing this.